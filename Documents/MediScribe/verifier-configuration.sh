#!/bin/bash

echo "üîç V√©rification de la configuration MediScribe"
echo "================================================"
echo ""

# V√©rifier les fichiers essentiels
echo "üìã V√©rification des fichiers..."
if [ -f "supabase-schema.sql" ]; then
    echo "‚úÖ Fichier supabase-schema.sql trouv√©"
else
    echo "‚ùå Fichier supabase-schema.sql manquant"
    exit 1
fi

if [ -f ".env.local" ]; then
    echo "‚úÖ Fichier .env.local trouv√©"
    
    # V√©rifier les variables Supabase
    if grep -q "VITE_SUPABASE_URL=https://bsuldpawzcqhicozxcwq" .env.local; then
        echo "‚úÖ Configuration Supabase d√©tect√©e"
    else
        echo "‚ö†Ô∏è  Configuration Supabase introuvable"
    fi
else
    echo "‚ö†Ô∏è  Fichier .env.local manquant"
fi

echo ""
echo "üì¶ V√©rification des d√©pendances..."
if [ -d "node_modules" ]; then
    echo "‚úÖ node_modules trouv√©"
else
    echo "‚ö†Ô∏è  Installation des d√©pendances..."
    npm install
fi

if [ -d "api-server/node_modules" ]; then
    echo "‚úÖ D√©pendances serveur API install√©es"
else
    echo "‚ö†Ô∏è  Installation des d√©pendances serveur..."
    cd api-server && npm install && cd ..
fi

echo ""
echo "üß™ Test de connexion √† Supabase..."
if [ -f ".env.local" ]; then
    # Extraire les variables d'environnement
    source .env.local 2>/dev/null
    
    # Test simple avec curl
    if [ -n "$VITE_SUPABASE_URL" ]; then
        echo "‚úÖ URL Supabase configur√©e : $VITE_SUPABASE_URL"
        echo ""
        echo "üìù PROCHAINES √âTAPES :"
        echo "1. Allez sur https://supabase.com/dashboard/project/bsuldpawzcqhicozxcwq"
        echo "2. Cliquez sur 'SQL Editor' dans le menu de gauche"
        echo "3. Ex√©cutez cette commande ici : open supabase-schema.sql"
        echo "4. Copiez TOUT le contenu du fichier qui s'ouvre"
        echo "5. Collez-le dans l'√©diteur SQL de Supabase"
        echo "6. Cliquez sur 'RUN'"
        echo ""
        echo "‚è≥ Attendez que je v√©rifie que le sch√©ma est ex√©cut√©..."
        
        # Demander √† l'utilisateur s'il a ex√©cut√© le sch√©ma
        echo ""
        read -p "Avez-vous ex√©cut√© le sch√©ma SQL dans Supabase ? (oui/non) " response
        
        if [ "$response" = "oui" ] || [ "$response" = "Oui" ] || [ "$response" = "o" ] || [ "$response" = "O" ]; then
            echo ""
            echo "‚úÖ Parfait ! Maintenant, cr√©ons le bucket de stockage..."
            echo ""
            echo "1. Allez dans 'Storage' dans Supabase"
            echo "2. Cliquez sur 'New bucket'"
            echo "3. Nom : audio-files"
            echo "4. Cochez 'Public bucket'"
            echo "5. Cliquez sur 'Create bucket'"
            echo ""
            read -p "Avez-vous cr√©√© le bucket 'audio-files' ? (oui/non) " response2
            
            if [ "$response2" = "oui" ] || [ "$response2" = "Oui" ] || [ "$response2" = "o" ] || [ "$response2" = "O" ]; then
                echo ""
                echo "üéâ PARFAIT ! Tout est configur√© !"
                echo ""
                echo "Pour d√©marrer l'application :"
                echo "  ./start-avec-nettoyage.sh"
                echo ""
            else
                echo "‚ö†Ô∏è  Cr√©ez le bucket puis relancez ce script"
            fi
        else
            echo "‚ö†Ô∏è  Ex√©cutez le sch√©ma SQL d'abord"
        fi
    else
        echo "‚ùå URL Supabase non configur√©e"
    fi
else
    echo "‚ùå Fichier .env.local manquant"
fi

