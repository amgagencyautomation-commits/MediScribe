global:
  resolve_timeout: 5m
  slack_api_url: '${SLACK_WEBHOOK_URL}'

# Templates for notifications
templates:
  - '/etc/alertmanager/*.tmpl'

# Route tree for notifications
route:
  group_by: ['alertname', 'cluster', 'service']
  group_wait: 10s
  group_interval: 10s
  repeat_interval: 12h
  receiver: 'default'
  
  routes:
    # Critical alerts go to multiple channels
    - match:
        severity: critical
      receiver: 'critical-alerts'
      continue: true
    
    # Warning alerts
    - match:
        severity: warning
      receiver: 'warning-alerts'
      continue: true
    
    # Info alerts (low priority)
    - match:
        severity: info
      receiver: 'info-alerts'
    
    # Business metrics alerts
    - match:
        component: business
      receiver: 'business-alerts'
    
    # Cost alerts
    - match:
        component: cost
      receiver: 'cost-alerts'

# Receivers configuration
receivers:
  - name: 'default'
    slack_configs:
      - channel: '#mediscribe-alerts'
        title: '{{ .GroupLabels.alertname }}'
        text: '{{ range .Alerts }}{{ .Annotations.description }}{{ end }}'
        send_resolved: true

  - name: 'critical-alerts'
    slack_configs:
      - channel: '#mediscribe-critical'
        title: 'üö® CRITICAL: {{ .GroupLabels.alertname }}'
        text: |
          *Alert:* {{ .GroupLabels.alertname }}
          *Severity:* {{ .CommonLabels.severity }}
          *Component:* {{ .CommonLabels.component }}
          
          {{ range .Alerts }}
          *Description:* {{ .Annotations.description }}
          *Summary:* {{ .Annotations.summary }}
          {{ end }}
        send_resolved: true
        color: 'danger'
    # Email notification for critical alerts
    email_configs:
      - to: '${ALERT_EMAIL}'
        from: 'alerts@mediscribe.com'
        smarthost: 'smtp.gmail.com:587'
        auth_username: '${SMTP_USERNAME}'
        auth_password: '${SMTP_PASSWORD}'
        headers:
          Subject: 'üö® CRITICAL Alert: {{ .GroupLabels.alertname }}'

  - name: 'warning-alerts'
    slack_configs:
      - channel: '#mediscribe-warnings'
        title: '‚ö†Ô∏è  WARNING: {{ .GroupLabels.alertname }}'
        text: |
          *Alert:* {{ .GroupLabels.alertname }}
          *Severity:* {{ .CommonLabels.severity }}
          
          {{ range .Alerts }}
          *Description:* {{ .Annotations.description }}
          {{ end }}
        send_resolved: true
        color: 'warning'

  - name: 'info-alerts'
    slack_configs:
      - channel: '#mediscribe-info'
        title: '‚ÑπÔ∏è  INFO: {{ .GroupLabels.alertname }}'
        text: '{{ range .Alerts }}{{ .Annotations.description }}{{ end }}'
        send_resolved: true

  - name: 'business-alerts'
    slack_configs:
      - channel: '#mediscribe-business'
        title: 'üìä Business Alert: {{ .GroupLabels.alertname }}'
        text: |
          *Alert:* {{ .GroupLabels.alertname }}
          *Type:* Business Metrics
          
          {{ range .Alerts }}
          *Description:* {{ .Annotations.description }}
          {{ end }}
        send_resolved: true
        color: '#36a64f'

  - name: 'cost-alerts'
    slack_configs:
      - channel: '#mediscribe-costs'
        title: 'üí∞ Cost Alert: {{ .GroupLabels.alertname }}'
        text: |
          *Alert:* {{ .GroupLabels.alertname }}
          *Type:* Cost Management
          
          {{ range .Alerts }}
          *Description:* {{ .Annotations.description }}
          {{ end }}
        send_resolved: true
        color: '#ff9900'

# Inhibition rules (suppress certain alerts when others are firing)
inhibit_rules:
  # Suppress warning if critical is firing for same alert
  - source_match:
      severity: 'critical'
    target_match:
      severity: 'warning'
    equal: ['alertname', 'cluster', 'service']
  
  # Suppress low memory warning if critical memory alert is firing
  - source_match:
      alertname: 'CriticalMemoryUsage'
    target_match:
      alertname: 'HighMemoryUsage'
    equal: ['instance']
